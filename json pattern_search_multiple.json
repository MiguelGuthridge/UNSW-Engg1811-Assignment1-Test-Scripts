[ 
    {
        "test_type": "Provided 1",
        "data_series": [-1, 5, 4, 8, 3, 21, 
            18, 16, 3, 2, 3, 1, 4, 5, 17, 22, 36, 33, 34, 9, 1, -2,
            -2, 4, -1, 7, 13, 12, 3, 1, 4, 5, 26, 22, 28, 27, 26, 2, 8, 6],
        "pattern_width": 4,
        "threshold": 15,
        "expected_output": [5, 16, 34]
    },

    {
        "test_type": "Provided 2",
        "data_series": [-1, 5, 4, 8, 3, 21, 
            18, 16, 3, 2, 3, 1, 4, 5, 17, 22, 36, 33, 34, 9, 1, -2,
            -2, 4, -1, 7, 13, 12, 3, 1, 4, 5, 26, 22, 28, 27, 26, 2, 8, 6],
        "pattern_width": 4,
        "threshold": 10,
        "expected_output":  [5, 16, 26, 34]
    },

    {
        "test_type": "Generic 1",
        "data_series": [-5, 14, 4, 15, 2, 12, 1, 13, 17, 10, 5, -2, -4, -17, 0, 10, 14, 7, 1],
        "pattern_width": 5,
        "threshold": 0,
        "expected_output":  [3, 8, 16]
    },

    {
        "test_type": "Generic 1 (widened)",
        "data_series": [-5, 14, 4, 15, 2, 12, 1, 13, 17, 10, 5, -2, -4, -17, 0, 10, 14, 7, 1],
        "pattern_width": 6,
        "threshold": 0,
        "expected_output":  [1, 8, 16]
    },

    {
        "test_type": "Empty set",
        "data_series": [],
        "pattern_width": 4,
        "threshold": 17,
        "expected_output":  "Insufficient data"
    },

    {
        "test_type": "Pattern width = 0",
        "data_series": [-1, 5, 4, 8, 3, 21, 
            18, 16, 3, 2, 3, 1, 4, 5, 17, 22, 36, 33, 34, 9, 1, -2,
            -2, 4, -1, 7, 13, 12, 3, 1, 4, 5, 26, 22, 28, 27, 26, 2, 8, 6],
        "pattern_width": 0,
        "threshold": 1,
        "expected_output":  "Error"
    },

    {
        "test_type": "Pattern width = -1",
        "data_series": [-1, 5, 4, 8, 3, 21, 
            18, 16, 3, 2, 3, 1, 4, 5, 17, 22, 36, 33, 34, 9, 1, -2,
            -2, 4, -1, 7, 13, 12, 3, 1, 4, 5, 26, 22, 28, 27, 26, 2, 8, 6],
        "pattern_width": -1,
        "threshold": 1,
        "expected_output":  "Error"
    },

    {
        "test_type": "No elements above threshold",
        "data_series": [2, 5, 12, -41, 8, 5, 13, 5, 9, -5, 0, -1, 3, 2, 3, 1, 4, 5, 3, 8, 6, -3, 10, -72],
        "pattern_width": 7,
        "threshold": 17,
        "expected_output":  []
    },

    {
        "test_type": "Data series constant",
        "data_series": [69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 
            69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69],
        "pattern_width": 4,
        "threshold": 68,
        "expected_output":  [0, 4, 8, 12, 16, 20]
    },

    {
        "test_type": "Pattern width = 1",
        "data_series": [-1, 5, 4, 8, 3, 21, 
            18, 16, 3, 2, 3, 1, 4, 5, 17, 22, 36, 33, 34, 9, 1, -2,
            -2, 4, -1, 7, 13, 12, 3, 1, 4, 5, 26, 22, 28, 27, 26, 2, 8, 6],
        "pattern_width": 1,
        "threshold": -10000,
        "expected_output":  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39]
    },

    {
        "test_type": "Steady ascent",
        "data_series": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
            16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 33],
        "pattern_width": 2,
        "threshold": 0,
        "expected_output":  [1, 3, 5, 7, 9, 11, 13, 
            15, 17, 19, 21, 23, 25, 27, 29, 31, 33]
    },

    {
        "test_type": "Steady ascent (Simpler)",
        "data_series": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9],
        "pattern_width": 2,
        "threshold": 0,
        "expected_output":  [1, 3, 5, 7, 9]
    },

    {
        "test_type": "All above threshold",
        "data_series": [-1, 5, 4, 8, 3, 21, 
            18, 16, 3, 2, 3, 1, 4, 5, 17, 22, 36, 33, 34, 9, 1, -2,
            -2, 4, -1, 7, 13, 12, 3, 1, 4, 5, 26, 22, 28, 27, 26, 2, 8, 6],
        "pattern_width": 6,
        "threshold": -1000,
        "expected_output":  [5, 16, 26, 34]
    }
]